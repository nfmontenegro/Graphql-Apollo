type Query {
  listUsers: [User!]!
  user(token: String!): User
  checkToken: VerifyToken!
}

type Mutation {
  deleteUser(_id: String!): String

  registerUser(
    name: String!
    lastname: String!
    email: String!
    nickname: String
    phoneNumber: Int
    website: String
    password: String!
  ): User!

  updateUser(   
    _id: String!
    name: String
    lastname: String
    email: String
    nickname: String
    phoneNumber: Int
    website: String
    file: String
    imageUrl: String
  ): User!

  payloadLoginUser (
    email: String!
    password: String!
  ): AuthPayload
}

# Schema Types
type AuthPayload {
  token: String
  user: User
  status: String
}

type User {
  _id: String!
  name: String!
  lastname: String!
  email: String!
  nickname: String
  phoneNumber: String
  website: String
  file: String
  imageUrl: String
  password: String!
  createdOn: String!
}

type VerifyToken {
  message: String
  status: String
}